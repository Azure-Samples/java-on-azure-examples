#
# Production profile with AAD (system managed identity)
#
# Run application using: 
#
#  java -jar quarkus-run.jar
#
# On the PostgreSQL database show the list of AAD principals:
#
#  select * from pgaadauth_list_principals(true);
#
# The managed identity of the application should be reflected in the list above!
#
# Add one using:
#
#  https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/how-to-manage-azure-ad-users#create-a-role-using-microsoft-entra-principal-name
#
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://<Server name>:5432/postgres?sslmode=require&authenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin
%prod.quarkus.datasource.jdbc.max-size=8
%prod.quarkus.datasource.jdbc.min-size=2
%prod.quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql

#
# Dev profile (used for local Docker container)
#
# Activate the profile using -Dquarkus.profile=dev or run mvn quarkus:dev
#
%dev.quarkus.hibernate-orm.database.generation=drop-and-create

#
# Legacy profile (username / password)
#
# Activate the profile using -Dquarkus.profile=legacy
#
%legacy.quarkus.datasource.jdbc.url=jdbc:postgresql://<Server name>:5432/postgres?sslmode=require
%legacy.quarkus.datasource.username=<Username>
%legacy.quarkus.datasource.password=<Database password>
%legacy.quarkus.hibernate-orm.database.generation=drop-and-create

#
# User assigned managed identity profile.
#
# See https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/how-to-manage-azure-ad-users#create-a-role-using-microsoft-entra-object-identifier
#
# Run application using: 
#
#   java -jar -Dquarkus.profile=user quarkus-run.jar
#
# Get your own userPrincipalName using:
#
#   az ad signed-in-user show --query userPrincipalName --output tsv
#
# Make sure that if you are running locally that you are logged in with az login
#
%user.quarkus.datasource.jdbc.url=jdbc:postgresql://<Server name>:5432/postgres?sslmode=require&authenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin
%user.quarkus.datasource.username=<userPrincipalName OR object-id>
%user.quarkus.hibernate-orm.database.generation=drop-and-create
