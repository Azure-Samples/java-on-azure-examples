on: 
  workflow_dispatch: 

name: 'aro/create/README.md'
jobs: 
  validate: 
    runs-on: 'ubuntu-latest'
    steps: 
      - uses: 'azure/login@v1'
        with: 
          subscription-id: '${{ secrets.AZURE_SUBSCRIPTION_ID }}'
          client-id: '${{ secrets.AZURE_CLIENT_ID }}'
          tenant-id: '${{ secrets.AZURE_TENANT_ID }}'
      - uses: 'actions/checkout@v3'
      - run: |
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=joaz-rg-$RANDOM
          echo "Using '"$RESOURCE_GROUP"' as resource group"
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          export ARO_NAME=aro-$RANDOM
          
          az network vnet create \
          --resource-group $RESOURCE_GROUP \
          --name aro-vnet \
          --address-prefixes 10.0.0.0/22
          
          az network vnet subnet create \
          --resource-group $RESOURCE_GROUP \
          --vnet-name aro-vnet \
          --name aro-master-subnet \
          --address-prefixes 10.0.0.0/23 \
          --service-endpoints Microsoft.ContainerRegistry
          
          az network vnet subnet create \
          --resource-group $RESOURCE_GROUP \
          --vnet-name aro-vnet \
          --name aro-worker-subnet \
          --address-prefixes 10.0.2.0/23 \
          --service-endpoints Microsoft.ContainerRegistry
          
          az network vnet subnet update \
          --name aro-master-subnet \
          --resource-group $RESOURCE_GROUP \
          --vnet-name aro-vnet \
          --disable-private-link-service-network-policies true
          
          az aro create \
          --name $ARO_NAME \
          --resource-group $RESOURCE_GROUP \
          --master-subnet aro-master-subnet \
          --worker-subnet aro-worker-subnet \
          --vnet aro-vnet
          
          export RESULT=$(az aro show --name $ARO_NAME --resource-group $RESOURCE_GROUP --output tsv --query provisioningState)
          az group delete --name $RESOURCE_GROUP --yes || true
          if [[ "$RESULT" != Succeeded ]]; then
          echo "Azure RedHat OpenShift cluster " $ARO_NAME " was not created successfully"
          exit 1
          fi
permissions: 
  contents: 'read'
  id-token: 'write'