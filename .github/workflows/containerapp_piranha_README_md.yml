on: 
  schedule: 
    - cron: '0 1 * * 1'
  workflow_dispatch: 

name: 'containerapp/piranha/README.md'
jobs: 
  validate: 
    runs-on: 'ubuntu-latest'
    steps: 
      - uses: 'azure/login@v1'
        with: 
          allow-no-subscriptions: 'true'
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - uses: 'actions/checkout@v2'
      - run: | 
          
          if [[ -z $REGION ]]; then
          export REGION=northcentralus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          if [[ -z $ACR_NAME ]]; then
          export ACR_NAME=acreg$RANDOM
          fi
          az acr create \
          --name $ACR_NAME \
          --resource-group $RESOURCE_GROUP \
          --sku Basic \
          --admin-enabled true
          
          cd acr/piranha
          
          mvn package
          export ACR_PIRANHA_IMAGE=piranha:latest
          
          az acr build --registry $ACR_NAME --resource-group $RESOURCE_GROUP --image $ACR_PIRANHA_IMAGE .
          
          cd ../..
          
          
          if [[ -z $REGION ]]; then
          export REGION=northcentralus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          az extension add --name containerapp --upgrade
          az provider register --namespace Microsoft.App
          az provider register --namespace Microsoft.OperationalInsights
          
          if [[ -z $ACA_ENVIRONMENT_NAME ]]; then
          export ACA_ENVIRONMENT_NAME=aca$RANDOM
          export ACA_REGION=westus
          fi
          
          az containerapp env create \
          --name $ACA_ENVIRONMENT_NAME \
          --resource-group $RESOURCE_GROUP \
          --location "$ACA_REGION"
          export ACA_PIRANHA=piranha
          
          az containerapp create \
          --name $ACA_PIRANHA \
          --resource-group $RESOURCE_GROUP \
          --environment $ACA_ENVIRONMENT_NAME \
          --image $ACR_NAME.azurecr.io/$ACR_PIRANHA_IMAGE \
          --target-port 8080 \
          --ingress 'external' \
          --registry-server $ACR_NAME.azurecr.io \
          --min-replicas 1
          
          az containerapp show \
          --resource-group $RESOURCE_GROUP \
          --name $ACA_PIRANHA \
          --query properties.configuration.ingress.fqdn
          
          sleep 120
          export URL=https://$(az containerapp show --resource-group $RESOURCE_GROUP --name $ACA_PIRANHA --query properties.configuration.ingress.fqdn --output tsv)
          export RESULT=$(curl $URL)
          az group delete --name $RESOURCE_GROUP --yes || true
          if [[ "$RESULT" != *"Hello World"* ]]; then
          echo "Response did not contain 'Hello World'"
          exit 1
          fi