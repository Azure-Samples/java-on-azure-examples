on: 
  schedule: 
    - cron: '0 13 * * 5'
  workflow_dispatch: 

name: 'appservice/docker-tomcat/README.md'
jobs: 
  validate: 
    runs-on: 'ubuntu-latest'
    steps: 
      - uses: 'azure/login@v1'
        with: 
          allow-no-subscriptions: 'true'
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - uses: 'actions/checkout@v2'
      - run: | 
          
          if [[ -z $REGION ]]; then
          export REGION=northcentralus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          if [[ -z $ACR_NAME ]]; then
          export ACR_NAME=acreg$RANDOM
          fi
          az acr create \
          --name $ACR_NAME \
          --resource-group $RESOURCE_GROUP \
          --sku Basic \
          --admin-enabled true
          
          cd acr/tomcat
          
          mvn package
          export ACR_TOMCAT_IMAGE=tomcat:latest
          
          az acr build --registry $ACR_NAME --image $ACR_TOMCAT_IMAGE .
          
          cd ../..
          
          
          if [[ -z $REGION ]]; then
          export REGION=northcentralus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          if [[ -z $ACR_NAME ]]; then
          export ACR_NAME=acreg$RANDOM
          fi
          az acr create \
          --name $ACR_NAME \
          --resource-group $RESOURCE_GROUP \
          --sku Basic \
          --admin-enabled true
          
          cd acr/create-settings-xml
          
          export ACR_USERNAME=`az acr credential show --name $ACR_NAME \
          --resource-group $RESOURCE_GROUP --query username --output tsv`
          export ACR_PASSWORD=`az acr credential show --name $ACR_NAME \
          --resource-group $RESOURCE_GROUP --query 'passwords[0].value' --output tsv`
          export SETTINGS_XML=$PWD/settings.xml
          
          cd ../..
          
          
          if [[ -z $REGION ]]; then
          export REGION=northcentralus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=java-on-azure-$RANDOM
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          if [[ -z $APPSERVICE_PLAN ]]; then
          export APPSERVICE_PLAN=appservice-plan-$RANDOM
          export REGION=northcentralus
          fi
          az appservice plan create \
          --resource-group $RESOURCE_GROUP \
          --location $REGION \
          --name $APPSERVICE_PLAN \
          --is-linux \
          --sku P1v3
          
          cd appservice/docker-tomcat
          
          export APPSERVICE_DOCKER_TOMCAT=appservice-docker-tomcat-$RANDOM
          
          mvn azure-webapp:deploy \
          --settings=$SETTINGS_XML \
          -DappName=$APPSERVICE_DOCKER_TOMCAT \
          -DimageName=$ACR_TOMCAT_IMAGE \
          -DappServicePlan=$APPSERVICE_PLAN \
          -DresourceGroup=$RESOURCE_GROUP \
          -DserverId=$ACR_NAME
          
          az webapp show \
          --resource-group $RESOURCE_GROUP \
          --name $APPSERVICE_DOCKER_TOMCAT \
          --query 'hostNames[0]' \
          --output tsv
          
          sleep 180
          cd ../..
          
          
          export RESULT=$(az webapp show --resource-group $RESOURCE_GROUP --name $APPSERVICE_DOCKER_TOMCAT --output tsv --query state)
          if [[ "$RESULT" != Running ]]; then
          echo 'Web application is NOT running'
          az group delete --name $RESOURCE_GROUP --yes || true
          exit 1
          fi
          export URL=https://$(az webapp show --resource-group $RESOURCE_GROUP --name $APPSERVICE_DOCKER_TOMCAT --output tsv --query defaultHostName)
          export RESULT=$(curl $URL)
          az group delete --name $RESOURCE_GROUP --yes || true
          if [[ "$RESULT" != *"custom Tomcat"* ]]; then
          echo "Response did not contain 'custom Tomcat'"
          exit 1
          fi