on: 
  schedule: 
    - cron: '0 3 * * 1'
  workflow_dispatch: 

name: 'afd/add-origins-to-origin-group/README.md'
jobs: 
  validate: 
    runs-on: 'ubuntu-latest'
    steps: 
      - uses: 'azure/login@v1'
        with: 
          subscription-id: '${{ secrets.AZURE_SUBSCRIPTION_ID }}'
          client-id: '${{ secrets.AZURE_CLIENT_ID }}'
          tenant-id: '${{ secrets.AZURE_TENANT_ID }}'
      - uses: 'actions/checkout@v3'
      - run: |
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=joazrg-$RANDOM
          echo "Using '"$RESOURCE_GROUP"' as resource group"
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          
          if [[ -z $AFD_PROFILE_NAME ]]; then
          export AFD_PROFILE_NAME=javazafd$RANDOM
          fi
          az afd profile create \
          --profile-name $AFD_PROFILE_NAME \
          --resource-group $RESOURCE_GROUP \
          --sku Premium_AzureFrontDoor
          
          if [[ -z $AFD_ENDPOINT_NAME ]]; then
          export AFD_ENDPOINT_NAME=javazafdendp$RANDOM
          fi
          az afd endpoint create \
          --resource-group $RESOURCE_GROUP \
          --endpoint-name $AFD_ENDPOINT_NAME \
          --profile-name $AFD_PROFILE_NAME \
          --enabled-state Enabled
          
          if [[ -z $AFD_ORIGIN_GROUP_NAME ]]; then
          export AFD_ORIGIN_GROUP_NAME=joazafdogrp$RANDOM
          fi
          az afd origin-group create \
          --resource-group $RESOURCE_GROUP \
          --origin-group-name $AFD_ORIGIN_GROUP_NAME \
          --profile-name $AFD_PROFILE_NAME \
          --probe-request-type GET \
          --probe-protocol Http \
          --probe-interval-in-seconds 60 \
          --probe-path / \
          --sample-size 4 \
          --successful-samples-required 3 \
          --additional-latency-in-milliseconds 50
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=joazrg-$RANDOM
          echo "Using '"$RESOURCE_GROUP"' as resource group"
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          
          if [[ -z $APPSERVICE_PLAN ]]; then
          export APPSERVICE_PLAN=joaz-asp-$RANDOM
          fi
          
          az appservice plan create \
          --resource-group $RESOURCE_GROUP \
          --location $REGION \
          --name $APPSERVICE_PLAN \
          --is-linux \
          --sku P1v3
          
          cd appservice/javase-springboot
          
          mvn package
          export APPSERVICE_JAVASE_SPRINGBOOT=joazappsvc-javase-springboot-$RANDOM
          
          mvn azure-webapp:deploy \
          -DappName=$APPSERVICE_JAVASE_SPRINGBOOT \
          -DappServicePlan=$APPSERVICE_PLAN \
          -DresourceGroup=$RESOURCE_GROUP
          
          sleep 240
          cd ../..
          
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $REGION ]]; then
          export REGION=westus
          fi
          
          if [[ -z $RESOURCE_GROUP ]]; then
          export RESOURCE_GROUP=joazrg-$RANDOM
          echo "Using '"$RESOURCE_GROUP"' as resource group"
          fi
          
          az group create --name $RESOURCE_GROUP --location $REGION
          
          if [[ -z $APPSERVICE_PLAN ]]; then
          export APPSERVICE_PLAN=joaz-asp-$RANDOM
          fi
          
          az appservice plan create \
          --resource-group $RESOURCE_GROUP \
          --location $REGION \
          --name $APPSERVICE_PLAN \
          --is-linux \
          --sku P1v3
          
          cd appservice/javase-quarkus
          
          mvn package
          export APPSERVICE_JAVASE_QUARKUS=javazappsvc-javase-quarkus-$RANDOM
          
          mvn azure-webapp:deploy \
          -DappName=$APPSERVICE_JAVASE_QUARKUS \
          -DappServicePlan=$APPSERVICE_PLAN \
          -DresourceGroup=$RESOURCE_GROUP
          
          sleep 120
          cd ../..
          
          export AFD_PRIMARY_HOST_NAME=$(az webapp show --resource-group $RESOURCE_GROUP --name $APPSERVICE_JAVASE_SPRINGBOOT --output tsv --query defaultHostName)
          az afd origin create \
          --resource-group $RESOURCE_GROUP \
          --host-name $AFD_PRIMARY_HOST_NAME \
          --profile-name $AFD_PROFILE_NAME \
          --origin-group-name $AFD_ORIGIN_GROUP_NAME \
          --origin-name springboot \
          --origin-host-header $AFD_PRIMARY_HOST_NAME \
          --priority 1 \
          --weight 1000 \
          --enabled-state Enabled \
          --http-port 80 \
          --https-port 443
          export AFD_SECONDARY_HOST_NAME=$(az webapp show --resource-group $RESOURCE_GROUP --name $APPSERVICE_JAVASE_QUARKUS --output tsv --query defaultHostName)
          az afd origin create \
          --resource-group $RESOURCE_GROUP \
          --host-name $AFD_SECONDARY_HOST_NAME \
          --profile-name $AFD_PROFILE_NAME \
          --origin-group-name $AFD_ORIGIN_GROUP_NAME \
          --origin-host-header $AFD_SECONDARY_HOST_NAME \
          --origin-name quarkus \
          --priority 1 \
          --weight 1000 \
          --enabled-state Enabled \
          --http-port 80 \
          --https-port 443
          
          export RESULT=$(az afd origin show --origin-name springboot --origin-group-name $AFD_ORIGIN_GROUP_NAME --profile-name $AFD_PROFILE_NAME --resource-group $RESOURCE_GROUP --output tsv --query provisioningState)
          if [[ "$RESULT" != Succeeded ]]; then
          az group delete --name $RESOURCE_GROUP --yes || true
          echo "Azure Front Door Origin - springboot - was not provisioned properly"
          exit 1
          fi
          export RESULT=$(az afd origin show --origin-name quarkus --origin-group-name $AFD_ORIGIN_GROUP_NAME --profile-name $AFD_PROFILE_NAME --resource-group $RESOURCE_GROUP --output tsv --query provisioningState)
          az group delete --name $RESOURCE_GROUP --yes || true
          if [[ "$RESULT" != Succeeded ]]; then
          echo "Azure Front Door Origin Group - quarkus - was not provisioned properly"
          exit 1
          fi
permissions: 
  contents: 'read'
  id-token: 'write'